"""Initial

Revision ID: 9a747d9d513f
Revises: 
Create Date: 2021-04-22 19:34:00.052463
"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic
revision = '9a747d9d513f'
down_revision = None
branch_labels = None
depends_on = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alert_queue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alert_queue_value'), 'alert_queue', ['value'], unique=True)
    op.create_table('alert_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alert_type_value'), 'alert_type', ['value'], unique=True)
    op.create_table('analysis_module_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('manual', sa.Boolean(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_analysis_module_type_value'), 'analysis_module_type', ['value'], unique=True)
    op.create_table('directive',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_directive_value'), 'directive', ['value'], unique=True)
    op.create_table('disposition',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rank')
    )
    op.create_index(op.f('ix_disposition_value'), 'disposition', ['value'], unique=True)
    op.create_table('event_prevention_tool',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_prevention_tool_value'), 'event_prevention_tool', ['value'], unique=True)
    op.create_table('event_remediation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_remediation_value'), 'event_remediation', ['value'], unique=True)
    op.create_table('event_risk_level',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_risk_level_value'), 'event_risk_level', ['value'], unique=True)
    op.create_table('event_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_status_value'), 'event_status', ['value'], unique=True)
    op.create_table('event_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_type_value'), 'event_type', ['value'], unique=True)
    op.create_table('event_vector',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_vector_value'), 'event_vector', ['value'], unique=True)
    op.create_table('feedback_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('icon', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('icon')
    )
    op.create_index(op.f('ix_feedback_type_value'), 'feedback_type', ['value'], unique=True)
    op.create_table('node_history_action',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_node_history_action_value'), 'node_history_action', ['value'], unique=True)
    op.create_table('observable_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_observable_type_value'), 'observable_type', ['value'], unique=True)
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_value'), 'role', ['value'], unique=True)
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tag_value'), 'tag', ['value'], unique=True)
    op.create_table('threat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_threat_value'), 'threat', ['value'], unique=True)
    op.create_table('threat_actor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_threat_actor_value'), 'threat_actor', ['value'], unique=True)
    op.create_table('threat_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_threat_type_value'), 'threat_type', ['value'], unique=True)
    op.create_table('analysis_module_type_observable_type_mapping',
    sa.Column('analysis_module_type_id', sa.Integer(), nullable=False),
    sa.Column('observable_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['analysis_module_type_id'], ['analysis_module_type.id'], ),
    sa.ForeignKeyConstraint(['observable_type_id'], ['observable_type.id'], ),
    sa.PrimaryKeyConstraint('analysis_module_type_id', 'observable_type_id')
    )
    op.create_index(op.f('ix_analysis_module_type_observable_type_mapping_analysis_module_type_id'), 'analysis_module_type_observable_type_mapping', ['analysis_module_type_id'], unique=False)
    op.create_table('node',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('node_type', sa.String(), nullable=True),
    sa.Column('threat_actor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['threat_actor_id'], ['threat_actor.id'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('observable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('expires_on', sa.DateTime(), nullable=True),
    sa.Column('for_detection', sa.Boolean(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['observable_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type_id', 'value', name='type_value_uc')
    )
    op.create_index('type_value', 'observable', ['type_id', 'value'], unique=False)
    op.create_index('value_trgm', 'observable', ['value'], unique=False, postgresql_ops={'value': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_table('threat_threat_type_mapping',
    sa.Column('threat_id', sa.Integer(), nullable=False),
    sa.Column('threat_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['threat_id'], ['threat.id'], ),
    sa.ForeignKeyConstraint(['threat_type_id'], ['threat_type.id'], ),
    sa.PrimaryKeyConstraint('threat_id', 'threat_type_id')
    )
    op.create_index(op.f('ix_threat_threat_type_mapping_threat_id'), 'threat_threat_type_mapping', ['threat_id'], unique=False)
    op.create_table('analysis',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('analysis_module_type_id', sa.Integer(), nullable=True),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('event_summary', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('module_extended_version', sa.String(), nullable=True),
    sa.Column('module_version', sa.String(), nullable=True),
    sa.Column('stack_trace', sa.String(), nullable=True),
    sa.Column('summary', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['analysis_module_type_id'], ['analysis_module_type.id'], ),
    sa.ForeignKeyConstraint(['uuid'], ['node.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('event',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('alert_time', sa.DateTime(), nullable=True),
    sa.Column('contain_time', sa.DateTime(), nullable=True),
    sa.Column('creation_time', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('disposition_time', sa.DateTime(), nullable=True),
    sa.Column('event_time', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('ownership_time', sa.DateTime(), nullable=True),
    sa.Column('remediation_time', sa.DateTime(), nullable=True),
    sa.Column('risk_level_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['risk_level_id'], ['event_risk_level.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['event_status.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['event_type.id'], ),
    sa.ForeignKeyConstraint(['uuid'], ['node.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('node_directive_mapping',
    sa.Column('node_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('directive_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['directive_id'], ['directive.id'], ),
    sa.ForeignKeyConstraint(['node_uuid'], ['node.uuid'], ),
    sa.PrimaryKeyConstraint('node_uuid', 'directive_id')
    )
    op.create_index(op.f('ix_node_directive_mapping_node_uuid'), 'node_directive_mapping', ['node_uuid'], unique=False)
    op.create_table('node_tag_mapping',
    sa.Column('node_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['node_uuid'], ['node.uuid'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('node_uuid', 'tag_id')
    )
    op.create_index(op.f('ix_node_tag_mapping_node_uuid'), 'node_tag_mapping', ['node_uuid'], unique=False)
    op.create_table('node_threat_mapping',
    sa.Column('node_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('threat_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['node_uuid'], ['node.uuid'], ),
    sa.ForeignKeyConstraint(['threat_id'], ['threat.id'], ),
    sa.PrimaryKeyConstraint('node_uuid', 'threat_id')
    )
    op.create_index(op.f('ix_node_threat_mapping_node_uuid'), 'node_threat_mapping', ['node_uuid'], unique=False)
    op.create_table('user',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('api_key', sa.String(), nullable=True),
    sa.Column('default_queue_id', sa.Integer(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('salt', sa.String(), nullable=True),
    sa.Column('timezone', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['default_queue_id'], ['alert_queue.id'], ),
    sa.ForeignKeyConstraint(['uuid'], ['node.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('api_key'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('alert',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('alert_type_id', sa.Integer(), nullable=True),
    sa.Column('disposition_id', sa.Integer(), nullable=True),
    sa.Column('disposition_time', sa.DateTime(), nullable=True),
    sa.Column('disposition_user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('event_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('insert_time', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('mode', sa.String(), nullable=True),
    sa.Column('owner_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('queue_id', sa.Integer(), nullable=True),
    sa.Column('tool', sa.String(), nullable=True),
    sa.Column('tool_instance', sa.String(), nullable=True),
    sa.Column('version', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['alert_type_id'], ['alert_type.id'], ),
    sa.ForeignKeyConstraint(['disposition_id'], ['disposition.id'], ),
    sa.ForeignKeyConstraint(['disposition_user_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['event_uuid'], ['event.uuid'], ),
    sa.ForeignKeyConstraint(['owner_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['queue_id'], ['alert_queue.id'], ),
    sa.ForeignKeyConstraint(['uuid'], ['analysis.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index('event_uuid', 'alert', ['event_uuid'], unique=False)
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('insert_time', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('node_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('value', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['node_uuid'], ['node.uuid'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('node_uuid', 'comment', ['node_uuid'], unique=False)
    op.create_table('event_prevention_tool_mapping',
    sa.Column('event_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('prevention_tool_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_uuid'], ['event.uuid'], ),
    sa.ForeignKeyConstraint(['prevention_tool_id'], ['event_prevention_tool.id'], ),
    sa.PrimaryKeyConstraint('event_uuid', 'prevention_tool_id')
    )
    op.create_index(op.f('ix_event_prevention_tool_mapping_event_uuid'), 'event_prevention_tool_mapping', ['event_uuid'], unique=False)
    op.create_table('event_remediation_mapping',
    sa.Column('event_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('remediation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_uuid'], ['event.uuid'], ),
    sa.ForeignKeyConstraint(['remediation_id'], ['event_remediation.id'], ),
    sa.PrimaryKeyConstraint('event_uuid', 'remediation_id')
    )
    op.create_index(op.f('ix_event_remediation_mapping_event_uuid'), 'event_remediation_mapping', ['event_uuid'], unique=False)
    op.create_table('event_vector_mapping',
    sa.Column('event_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('vector_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_uuid'], ['event.uuid'], ),
    sa.ForeignKeyConstraint(['vector_id'], ['event_vector.id'], ),
    sa.PrimaryKeyConstraint('event_uuid', 'vector_id')
    )
    op.create_index(op.f('ix_event_vector_mapping_event_uuid'), 'event_vector_mapping', ['event_uuid'], unique=False)
    op.create_table('node_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('action_id', sa.Integer(), nullable=True),
    sa.Column('action_user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('after', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('before', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('node_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['action_id'], ['node_history_action.id'], ),
    sa.ForeignKeyConstraint(['action_user_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['node_uuid'], ['node.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_role_mapping',
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('user_uuid', 'role_id')
    )
    op.create_index(op.f('ix_user_role_mapping_user_uuid'), 'user_role_mapping', ['user_uuid'], unique=False)
    op.create_table('node_history_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('feedback_type_id', sa.Integer(), nullable=True),
    sa.Column('node_history_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['feedback_type_id'], ['feedback_type.id'], ),
    sa.ForeignKeyConstraint(['node_history_id'], ['node_history.id'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('observable_instance',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('alert_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('observable_id', sa.Integer(), nullable=True),
    sa.Column('redirection', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('time', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['alert_uuid'], ['alert.uuid'], ),
    sa.ForeignKeyConstraint(['observable_id'], ['observable.id'], ),
    sa.ForeignKeyConstraint(['redirection'], ['observable_instance.uuid'], ),
    sa.ForeignKeyConstraint(['uuid'], ['node.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('analysis_observable_instance_mapping',
    sa.Column('analysis_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('observable_instance_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['analysis_uuid'], ['analysis.uuid'], ),
    sa.ForeignKeyConstraint(['observable_instance_uuid'], ['observable_instance.uuid'], ),
    sa.PrimaryKeyConstraint('analysis_uuid', 'observable_instance_uuid')
    )
    op.create_index(op.f('ix_analysis_observable_instance_mapping_analysis_uuid'), 'analysis_observable_instance_mapping', ['analysis_uuid'], unique=False)
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_analysis_observable_instance_mapping_analysis_uuid'), table_name='analysis_observable_instance_mapping')
    op.drop_table('analysis_observable_instance_mapping')
    op.drop_table('observable_instance')
    op.drop_table('node_history_feedback')
    op.drop_index(op.f('ix_user_role_mapping_user_uuid'), table_name='user_role_mapping')
    op.drop_table('user_role_mapping')
    op.drop_table('node_history')
    op.drop_index(op.f('ix_event_vector_mapping_event_uuid'), table_name='event_vector_mapping')
    op.drop_table('event_vector_mapping')
    op.drop_index(op.f('ix_event_remediation_mapping_event_uuid'), table_name='event_remediation_mapping')
    op.drop_table('event_remediation_mapping')
    op.drop_index(op.f('ix_event_prevention_tool_mapping_event_uuid'), table_name='event_prevention_tool_mapping')
    op.drop_table('event_prevention_tool_mapping')
    op.drop_index('node_uuid', table_name='comment')
    op.drop_table('comment')
    op.drop_index('event_uuid', table_name='alert')
    op.drop_table('alert')
    op.drop_table('user')
    op.drop_index(op.f('ix_node_threat_mapping_node_uuid'), table_name='node_threat_mapping')
    op.drop_table('node_threat_mapping')
    op.drop_index(op.f('ix_node_tag_mapping_node_uuid'), table_name='node_tag_mapping')
    op.drop_table('node_tag_mapping')
    op.drop_index(op.f('ix_node_directive_mapping_node_uuid'), table_name='node_directive_mapping')
    op.drop_table('node_directive_mapping')
    op.drop_table('event')
    op.drop_table('analysis')
    op.drop_index(op.f('ix_threat_threat_type_mapping_threat_id'), table_name='threat_threat_type_mapping')
    op.drop_table('threat_threat_type_mapping')
    op.drop_index('value_trgm', table_name='observable')
    op.drop_index('type_value', table_name='observable')
    op.drop_table('observable')
    op.drop_table('node')
    op.drop_index(op.f('ix_analysis_module_type_observable_type_mapping_analysis_module_type_id'), table_name='analysis_module_type_observable_type_mapping')
    op.drop_table('analysis_module_type_observable_type_mapping')
    op.drop_index(op.f('ix_threat_type_value'), table_name='threat_type')
    op.drop_table('threat_type')
    op.drop_index(op.f('ix_threat_actor_value'), table_name='threat_actor')
    op.drop_table('threat_actor')
    op.drop_index(op.f('ix_threat_value'), table_name='threat')
    op.drop_table('threat')
    op.drop_index(op.f('ix_tag_value'), table_name='tag')
    op.drop_table('tag')
    op.drop_index(op.f('ix_role_value'), table_name='role')
    op.drop_table('role')
    op.drop_index(op.f('ix_observable_type_value'), table_name='observable_type')
    op.drop_table('observable_type')
    op.drop_index(op.f('ix_node_history_action_value'), table_name='node_history_action')
    op.drop_table('node_history_action')
    op.drop_index(op.f('ix_feedback_type_value'), table_name='feedback_type')
    op.drop_table('feedback_type')
    op.drop_index(op.f('ix_event_vector_value'), table_name='event_vector')
    op.drop_table('event_vector')
    op.drop_index(op.f('ix_event_type_value'), table_name='event_type')
    op.drop_table('event_type')
    op.drop_index(op.f('ix_event_status_value'), table_name='event_status')
    op.drop_table('event_status')
    op.drop_index(op.f('ix_event_risk_level_value'), table_name='event_risk_level')
    op.drop_table('event_risk_level')
    op.drop_index(op.f('ix_event_remediation_value'), table_name='event_remediation')
    op.drop_table('event_remediation')
    op.drop_index(op.f('ix_event_prevention_tool_value'), table_name='event_prevention_tool')
    op.drop_table('event_prevention_tool')
    op.drop_index(op.f('ix_disposition_value'), table_name='disposition')
    op.drop_table('disposition')
    op.drop_index(op.f('ix_directive_value'), table_name='directive')
    op.drop_table('directive')
    op.drop_index(op.f('ix_analysis_module_type_value'), table_name='analysis_module_type')
    op.drop_table('analysis_module_type')
    op.drop_index(op.f('ix_alert_type_value'), table_name='alert_type')
    op.drop_table('alert_type')
    op.drop_index(op.f('ix_alert_queue_value'), table_name='alert_queue')
    op.drop_table('alert_queue')
    # ### end Alembic commands ###